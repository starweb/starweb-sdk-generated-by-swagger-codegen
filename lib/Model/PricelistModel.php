<?php


/**
 * PricelistModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Starweb Shop API v.2
 *
 * This API is only allowed to be used by partners of Starweb AB and further requires explicit permission from both Starweb AB and the shop owner. If you are interested in using it, please contact us at starwebapi@starweb.se
 *
 * OpenAPI spec version: 2.0.0
 * Contact: starwebapi@starweb.se
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.0-rc1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;



use \ArrayAccess;


use \Swagger\Client\ObjectSerializer;

/**
 * PricelistModel Class Doc Comment
 *
 * @category Class

 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PricelistModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PricelistModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'pricelist_id' => 'int''name' => 'string''is_master' => 'bool''country_codes' => 'string[]''currency_code' => 'string''parent_pricelist_id' => 'int''is_customer_pricelist' => 'bool''is_country_pricelist' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'pricelist_id' => 'int32''name' => null'is_master' => null'country_codes' => null'currency_code' => null'parent_pricelist_id' => 'int32''is_customer_pricelist' => null'is_country_pricelist' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'pricelist_id' => 'pricelistId''name' => 'name''is_master' => 'isMaster''country_codes' => 'countryCodes''currency_code' => 'currencyCode''parent_pricelist_id' => 'parentPricelistId''is_customer_pricelist' => 'isCustomerPricelist''is_country_pricelist' => 'isCountryPricelist'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'pricelist_id' => 'setPricelistId''name' => 'setName''is_master' => 'setIsMaster''country_codes' => 'setCountryCodes''currency_code' => 'setCurrencyCode''parent_pricelist_id' => 'setParentPricelistId''is_customer_pricelist' => 'setIsCustomerPricelist''is_country_pricelist' => 'setIsCountryPricelist'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'pricelist_id' => 'getPricelistId''name' => 'getName''is_master' => 'getIsMaster''country_codes' => 'getCountryCodes''currency_code' => 'getCurrencyCode''parent_pricelist_id' => 'getParentPricelistId''is_customer_pricelist' => 'getIsCustomerPricelist''is_country_pricelist' => 'getIsCountryPricelist'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    
    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];
    

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        
        
        $this->container['pricelist_id'] = isset($data['pricelist_id']) ? $data['pricelist_id'] : null;
        
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        
        $this->container['is_master'] = isset($data['is_master']) ? $data['is_master'] : null;
        
        $this->container['country_codes'] = isset($data['country_codes']) ? $data['country_codes'] : null;
        
        $this->container['currency_code'] = isset($data['currency_code']) ? $data['currency_code'] : null;
        
        $this->container['parent_pricelist_id'] = isset($data['parent_pricelist_id']) ? $data['parent_pricelist_id'] : null;
        
        $this->container['is_customer_pricelist'] = isset($data['is_customer_pricelist']) ? $data['is_customer_pricelist'] : null;
        
        $this->container['is_country_pricelist'] = isset($data['is_country_pricelist']) ? $data['is_country_pricelist'] : null;
        
        
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        
        
        $invalidProperties = [];
        

        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        

        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        return true;
    }

    

    /**
     * Gets pricelist_id
     *
     * @return int
     */
    public function getPricelistId()
    {
        return $this->container['pricelist_id'];
    }

    /**
     * Sets pricelist_id
     *
     * @param int $pricelist_id The shipping methods Id
     *
     * @return $this
     */
    public function setPricelistId($pricelist_id)
    {
        
        
        $this->container['pricelist_id'] = $pricelist_id;

        return $this;
    }
    

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name The name of this pricelist
     *
     * @return $this
     */
    public function setName($name)
    {
        
        
        $this->container['name'] = $name;

        return $this;
    }
    

    /**
     * Gets is_master
     *
     * @return bool
     */
    public function getIsMaster()
    {
        return $this->container['is_master'];
    }

    /**
     * Sets is_master
     *
     * @param bool $is_master If this pricelist is the default ”master” pricelist or not. Only one pricelist can be the master pricelist
     *
     * @return $this
     */
    public function setIsMaster($is_master)
    {
        
        
        $this->container['is_master'] = $is_master;

        return $this;
    }
    

    /**
     * Gets country_codes
     *
     * @return string[]
     */
    public function getCountryCodes()
    {
        return $this->container['country_codes'];
    }

    /**
     * Sets country_codes
     *
     * @param string[] $country_codes The countryCodes this pricelist is valid for
     *
     * @return $this
     */
    public function setCountryCodes($country_codes)
    {
        
        
        $this->container['country_codes'] = $country_codes;

        return $this;
    }
    

    /**
     * Gets currency_code
     *
     * @return string
     */
    public function getCurrencyCode()
    {
        return $this->container['currency_code'];
    }

    /**
     * Sets currency_code
     *
     * @param string $currency_code The currencyCode this pricelist is valid for
     *
     * @return $this
     */
    public function setCurrencyCode($currency_code)
    {
        
        
        $this->container['currency_code'] = $currency_code;

        return $this;
    }
    

    /**
     * Gets parent_pricelist_id
     *
     * @return int
     */
    public function getParentPricelistId()
    {
        return $this->container['parent_pricelist_id'];
    }

    /**
     * Sets parent_pricelist_id
     *
     * @param int $parent_pricelist_id Does this pricelist has a parent price list.
     *
     * @return $this
     */
    public function setParentPricelistId($parent_pricelist_id)
    {
        
        
        $this->container['parent_pricelist_id'] = $parent_pricelist_id;

        return $this;
    }
    

    /**
     * Gets is_customer_pricelist
     *
     * @return bool
     */
    public function getIsCustomerPricelist()
    {
        return $this->container['is_customer_pricelist'];
    }

    /**
     * Sets is_customer_pricelist
     *
     * @param bool $is_customer_pricelist Is this pricelist a ”customer” pricelist (for selected customer groups)
     *
     * @return $this
     */
    public function setIsCustomerPricelist($is_customer_pricelist)
    {
        
        
        $this->container['is_customer_pricelist'] = $is_customer_pricelist;

        return $this;
    }
    

    /**
     * Gets is_country_pricelist
     *
     * @return bool
     */
    public function getIsCountryPricelist()
    {
        return $this->container['is_country_pricelist'];
    }

    /**
     * Sets is_country_pricelist
     *
     * @param bool $is_country_pricelist Is this pricelist a ”country” pricelist (base pricelist for a certain country)
     *
     * @return $this
     */
    public function setIsCountryPricelist($is_country_pricelist)
    {
        
        
        $this->container['is_country_pricelist'] = $is_country_pricelist;

        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


